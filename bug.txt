##################### Bug: after double forced pl1 plays, but turn does not changes
solved: pl2 created forced on pl1. pl1 complies, and another forced is created. then it should have been pl1 turn,  but it changed to pl2
maybe postconfirm does not take into account when you have to 

ran = 0
global ran
ran = (ran+12) % (len(self.undealt) - 1) #DOTO RM LATER!

pl1: 1st rot once in 2,1
pl2: last below
pl1: 1st below
pl2: 2nd rot once on top right
pl1: forced
pl1: forced
pl1: first on bottom
pl2: forced 
pl2: 2nd (48) on bottom left
pl1: forced
pl1: 1st rot once on top right
pl2: forced NB: same tile forced on two places. places highlighted in green and yellow. put it on the right
['turn=1', 'Pycharm pl1', 'Forced: False', 'confirmed:', (2.0, 3.0, 0, 55, 0), 'match cur:', [], 'match opp:', [], 'turn=: 2']
['turn=2', 'Pycharm pl1', 'Forced: False', 'received: ', (2.0, 2.0, 0, 44, 0), 'match cur:', [], 'match opp:', [], 'turn=: 3']
['turn=3', 'Pycharm pl1', 'Forced: False', 'confirmed:', (2.0, 1.0, 0, 5, -60), 'match cur:', [], 'match opp:', [], 'turn=: 4']
['turn=4', 'Pycharm pl1', 'Forced: False', 'received: ', (3.0, 0.0, 0, 30, -60), 'match cur:', [], 'match opp:', [[(0, 5, -1, 51)]], 'turn=: 5']
['turn=5', 'Pycharm pl1', 'Forced: True', 'confirmed:', (3.0, 1.0, 0, 51, -180), 'match cur:', [[(0, 0, -1, 36)]], 'Forced aftelse:True', 'turn=: 5']
['turn=5', 'Pycharm pl1', 'Forced: True', 'confirmed:', (3.0, 2.0, 0, 36, -240), 'match cur:', [], 'Forced becomes:False', 'turn=: 5']
['turn=5', 'Pycharm pl1', 'Forced: False', 'confirmed:', (2.0, 4.0, 0, 27, 0), 'match cur:', [], 'match opp:', [[(0, 1, -2, 41)]], 'turn=: 6']
['turn=6', 'Pycharm pl1', 'Forced: True', 'received: ', (3.0, 3.0, 0, 41, 0), 'match cur:', [], 'Forced becomes:False', 'turn=: 6']
['turn=6', 'Pycharm pl1', 'Forced: False', 'received: ', (2.0, 5.0, 0, 48, 0), 'match cur:', [], 'match opp:', [], 'turn=: 7']





#####################
Forced tile that would create an impossible space for pl2. random = 0
[['turn=1', 'Player48296 pl1', 'confirmed:', (3.0, 2.0, 0, 1, 0), 'matching:', [], 'turn=: 2'], 
['turn=2', 'Player48296 pl1', 'received: ', (3.0, 3.0, 0, 7, -240), 'matching:', [], 'turn=: 3'], 
['turn=3', 'Player48296 pl1', 'confirmed:', (3.0, 1.0, 0, 2, -240), 'matching:', [], 'turn=: 4'], 
['turn=4', 'Player48296 pl1', 'received: ', (2.0, 1.0, 0, 8, -240), 'matching:', [], 'turn=: 5'], 
['turn=5', 'Player48296 pl1', 'confirmed:', (2.0, 2.0, 0, 3, -240), 'matching:', [[(0, 1, -1), (0, 2, -1)]], 'turn=: 5'], 
['turn=5', 'Player48296 pl1', 'confirmed:', (2.0, 3.0, 0, 5, -240), 'matching:', [], 'turn=: 5'], 
['turn=5', 'Player48296 pl1', 'confirmed:', (1.0, 0.0, 0, 4, 0), 'matching:', [[(0, 0, -1)]], 'turn=: 5'], 
['turn=5', 'Player48296 pl1', 'confirmed:', (1.0, 1.0, 0, 6, -60), 'matching:', [], 'turn=: 6'], 
['turn=6', 'Player48296 pl1', 'received: ', (1.0, 2.0, 0, 10, 0), 'matching:', [], 'turn=: 6'], 
['turn=6', 'Player48296 pl1', 'received: ', (0.0, 3.0, 0, 12, -180), 'matching:', [[(0, 1, -2), (0, 3, -2)], [(0, 0, -2)]], 'turn=: 6'], 
['turn=6', 'Player48296 pl1', 'received: ', (1.0, 3.0, 0, 11, -300), 'matching:', [[(0, 1, -2)],[(0, 0, -2)]], 'turn=: 6'], 
['turn=6', 'Player48296 pl1', 'received: ', (2.0, 4.0, 0, 14, -120), 'matching:', [[(0, 0, -2)]], 'turn=: 6']]

[['turn=1', 'Player48297 pl2', 'received: ', (3.0, 2.0, 0, 1, 0), 'matching:', [], 'turn=: 2'], 
['turn=2', 'Player48297 pl2', 'confirmed:', (3.0, 3.0, 0, 7, -240), 'matching:', [], 'turn=: 3'], 
['turn=3', 'Player48297 pl2', 'received: ', (3.0, 1.0, 0, 2, -240), 'matching:', [], 'turn=: 4'], 
['turn=4', 'Player48297 pl2', 'confirmed:', (2.0, 1.0, 0, 8, -240), 'matching:', [], 'turn=: 5'], 
['turn=5', 'Player48297 pl2', 'received: ', (2.0, 2.0, 0, 3, -240), 'matching:', [[(0, 1, -1), (0, 2, -1)]], 'turn=: 5'], 
['turn=5', 'Player48297 pl2', 'received: ', (2.0, 3.0, 0, 5, -240), 'matching:', [], 'turn=: 5'], 
['turn=5', 'Player48297 pl2', 'received: ', (1.0, 0.0, 0, 4, 0), 'matching:', [[(0, 0, -1)]], 'turn=: 5'], 
['turn=5', 'Player48297 pl2', 'received: ', (1.0, 1.0, 0, 6, -60), 'matching:', [], 'turn=: 6'], 
['turn=6', 'Player48297 pl2', 'confirmed:', (1.0, 2.0, 0, 10, 0), 'matching:', [], 'turn=: 6'], 
['turn=6', 'Player48297 pl2', 'confirmed:', (0.0, 3.0, 0, 12, -180), 'matching:', [[(0, 1, -2), (0, 3, -2)],[(0, 0, -2)]], 'turn=: 6'], 
['turn=6', 'Player48297 pl2', 'confirmed:', (1.0, 3.0, 0, 11, -300), 'matching:', [[(0, 1, -2)],[(0, 0, -2)]], 'turn=: 6'], 
['turn=6', 'Player48297 pl2', 'confirmed:', (2.0, 4.0, 0, 14, -120), 'matching:', [[(0, 0, -2)]], 'turn=: 6']]

Clicked on [1.0, 6.0, 0]
  Player 2 - Player48297
  cfg.turnUpDown=6
  cfg.player_num=2, playerIsTabUp=False
  cfg.name/opponentname=Player48297/Player48296
  cfg.deck.is_confirmable= A neighboring tile would have to match three identical colors
  cfg.deck._positions=[(3.0, 2.0, 0), (3.0, 1.0, 0), (2.0, 2.0, 0), (1.0, 0.0, 0)]
                   =[(2.0, 3.0, 0), (1.0, 1.0, 0), (3.0, 3.0, 0), (2.0, 1.0, 0)]
                   =[(0.0, 2.0, 0), (1.0, 2.0, 0), (1.0, 3.0, 0), (0.0, 3.0, 0), (0, 0, -1), (2.0, 4.0, 0), (0, 1, -1), (0, 1, -2), (0, 2, -1), (0, 3, -1), (0, 4, -1), (0, 5, -1), (0, 2, -2), (0, 3, -2), (0, 4, -2), (0, 5, -2)]
  cfg.deck._table=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, -2, -1, -1, -1, -1, -2, -2, -2, -2]
  cfg.deck._positions_moved=[(0.0, 2.0, 9)]
  cfg.deck._rotations=[0, -240, -240, 0, -240, -60, -240, -240, -120, 0, -300, -180, 0, -120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  cfg.deck._confirmed[0]=[(3.0, 2.0, 1), (3.0, 3.0, 7), (3.0, 1.0, 2), (2.0, 1.0, 8), (2.0, 2.0, 3), (2.0, 3.0, 5), (1.0, 0.0, 4), (1.0, 1.0, 6), (1.0, 2.0, 10), (0.0, 3.0, 12), (1.0, 3.0, 11), (2.0, 4.0, 14)]
  cfg.deck._confirmed[1]=[(0, 0, 13), (0, 1, 15), (0, 2, 17), (0, 3, 18), (0, 4, 19), (0, 5, 20)]
  cfg.deck._confirmed[2]=[(0, 0, 9), (0, 1, 16), (0, 2, 21), (0, 3, 22), (0, 4, 23), (0, 5, 24)]
  cfg.deck.itemids=[917, 938, 954, 920, 965, 972, 933, 943, 1007, 926, 995, 979, 929, 1002, 939, 944, 955, 966, 967, 973, 976, 980, 996, 1003]



#####################
Here pl1 played, got a forced but turn already was switched to other player. 
[['turn=1', 'Player1 pl1', 'confirmed:', (3.0, 2.0, 0, 2, 0), 'matching:', [], 'turn=: 2'],
['turn=2', 'Player1 pl1', 'received: ', (3.0, 3.0, 0, 10, 0), 'matching:', [], 'turn=: 3'],
['turn=3', 'Player1 pl1', 'confirmed:', (3.0, 1.0, 0, 1, 0), 'matching:', [], 'turn=: 4'],
['turn=4', 'Player1 pl1', 'received: ', (2.0, 4.0, 0, 11, -120), 'matching:', [[(0, 3, -2), (0, 4, -2), (0, 5, -2)]], 'turn=: 4'],
['turn=4', 'Player1 pl1', 'received: ', (2.0, 3.0, 0, 12, 0), 'matching:', [], 'turn=: 5'],
['turn=5', 'Player1 pl1', 'confirmed:', (2.0, 2.0, 0, 3, 0), 'matching:', [], 'turn=: 5'],
['turn=5', 'Player1 pl1', 'confirmed:', (3.0, 0.0, 0, 5, 0), 'matching:', [[(0, 2, -1)]], 'turn=: 5'],
['turn=5', 'Player1 pl1', 'confirmed:', (2.0, 1.0, 0, 13, 0), 'matching:', [], 'turn=: 6'],
['turn=6', 'Player1 pl1', 'received: ', (2.0, 5.0, 0, 7, 0), 'matching:', [[(0, 1, -2)]], 'turn=: 6'],
['turn=6', 'Player1 pl1', 'received: ', (3.0, 4.0, 0, 9, 0), 'matching:', [], 'turn=: 7'],
['turn=7', 'Player1 pl1', 'confirmed:', (4.0, 2.0, 0, 18, -180), 'matching:', [], 'turn=: 8']]

[['turn=1', 'Player2 pl2', 'received: ', (3.0, 2.0, 0, 2, 0), 'matching:', [], 'turn=: 2'],
['turn=2', 'Player2 pl2', 'confirmed:', (3.0, 3.0, 0, 10, 0), 'matching:', [], 'turn=: 3'],
['turn=3', 'Player2 pl2', 'received: ', (3.0, 1.0, 0, 1, 0), 'matching:', [], 'turn=: 4'],
['turn=4', 'Player2 pl2', 'confirmed:', (2.0, 4.0, 0, 11, -120), 'matching:', [[(0, 3, -2), (0, 4, -2), (0, 5, -2)]], 'turn=: 4'],
['turn=4', 'Player2 pl2', 'confirmed:', (2.0, 3.0, 0, 12, 0), 'matching:', [], 'turn=: 5'],
['turn=5', 'Player2 pl2', 'received: ', (2.0, 2.0, 0, 3, 0), 'matching:', [], 'turn=: 5'],
['turn=5', 'Player2 pl2', 'received: ', (3.0, 0.0, 0, 5, 0), 'matching:', [[(0, 2, -1)]], 'turn=: 5'],
['turn=5', 'Player2 pl2', 'received: ', (2.0, 1.0, 0, 13, 0), 'matching:', [], 'turn=: 6'],
['turn=6', 'Player2 pl2', 'confirmed:', (2.0, 5.0, 0, 7, 0), 'matching:', [[(0, 1, -2)]], 'turn=: 6'],
['turn=6', 'Player2 pl2', 'confirmed:', (3.0, 4.0, 0, 9, 0), 'matching:', [], 'turn=: 7'],
['turn=7', 'Player2 pl2', 'received: ', (4.0, 2.0, 0, 18, -180), 'matching:', [], 'turn=: 8']]

I really see forced
Forced space at 4,3
Forced space at 4,1
('find_matching_tiles gives: ', '[(0, 3, -2), (0, 4, -2), (0, 5, -2)]')
('find_matching_tiles gives: ', '[(0, 1, -2), (0, 3, -2), (0, 4, -2)]')

  =======>
  Clicked on [6.0, 7.0, 0]
  Player 1 - Player1
  cfg.turnUpDown=8
  cfg.player_num=1, playerIsTabUp=True
  cfg.name/opponentname=Player1/Player2
  cfg.deck.is_confirmable= It is Player2's turn
  cfg.deck._positions=[(3.0, 1.0, 0), (3.0, 2.0, 0), (2.0, 2.0, 0), (0, 0, -1)]
                   =[(3.0, 0.0, 0), (0, 1, -1), (2.0, 5.0, 0), (0, 0, -2)]
                   =[(3.0, 4.0, 0), (3.0, 3.0, 0), (2.0, 4.0, 0), (2.0, 3.0, 0), (2.0, 1.0, 0), (0, 1, -2), (0, 2, -1), (0, 2, -2), (0, 3, -2), (4.0, 2.0, 0), (0, 3, -1), (0, 4, -1), (0, 4, -2), (0, 5, -2), (0, 5, -1)]
  cfg.deck._table=[0, 0, 0, -1, 0, -1, 0, -2, 0, 0, 0, 0, 0, -2, -1, -2, -2, 0, -1, -1, -2, -2, -1]
  cfg.deck._positions_moved=[]
  cfg.deck._rotations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -120, 0, 0, 0, 0, 0, 0, -180, 0, 0, 0, 0, 0]
  cfg.deck._confirmed[0]=[(3.0, 2.0, 2), (3.0, 3.0, 10), (3.0, 1.0, 1), (2.0, 4.0, 11), (2.0, 3.0, 12), (2.0, 2.0, 3), (3.0, 0.0, 5), (2.0, 1.0, 13), (2.0, 5.0, 7), (3.0, 4.0, 9), (4.0, 2.0, 18)]
  cfg.deck._confirmed[1]=[(0, 0, 4), (0, 1, 6), (0, 2, 15), (0, 3, 19), (0, 4, 20), (0, 5, 23)]
  cfg.deck._confirmed[2]=[(0, 0, 8), (0, 1, 14), (0, 2, 16), (0, 3, 17), (0, 4, 21), (0, 5, 22)]
  cfg.deck.itemids=[917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 933, 928, 929, 930, 931, 934, 943, 959, 947, 950, 951, 956, 960]
  <=======

#####################

#Bug after fulfilling a forced space

#Player 2 Ale
Received by Pycharm for clientIsConnected:
  {'addr': ('127.0.0.1', 46214)}

Sent for name:  {'newname': 'Pycharm', 'gameid': None, 'sender': ('127.0.0.1', 46214)}

Received by Pycharm for updateTreeview:
  {'listVal': [['Mararie', 1, 46213, 'None'],
['Player46214', 0, 46214, 'None']]}

Received by Pycharm for updateTreeview:
  {'listVal': [['Mararie', 1, 46213, 'None'],
['Pycharm', 0, 46214, 'None']]}

Sent for name:  {'newname': 'ALe', 'gameid': None, 'sender': ('127.0.0.1', 46214)}

Received by ALe for updateTreeview:
  {'listVal': [['Mararie', 1, 46213, 'None'],
['ALe', 0, 46214, 'None']]}

Sent for toggleReady:  {'gameid': None, 'sender': ('127.0.0.1', 46214)}

Received by ALe for startgame:
  {'gameid': 9, 'playerIsTabUp': False, 'opponentname': 'Mararie', 'player_num': 2}
Starting board for player 2 ALe

Received by ALe for playConfirmedMove:
  {'gameid': 9, 'angle': -120, 'sender': ('127.0.0.1', 46213), 'turnUpDown': 2, 'rowcolnum': (4.0, 6.0, 29), 'rowcoltab2': (4.0, 6.0, 0), 'rowcoltab1': (0, 4, -1)}
-------post_confirm ALe matchinglistcurrent=[]
-------post_confirm ALe turnUpDown+=1: 2
Tile at [0, 2.0, -2], rotation = -60, colors = bgrrbg
Tile at [0, 0.0, -2], rotation = -60, colors = bbggyy
Tile at [0, 0.0, -2], rotation = -120, colors = ybbggy

Confirm!

Sent for confirm:  {'gameid': 9, 'angle': -120, 'sender': ('127.0.0.1', 46214), 'turnUpDown': 2, 'rowcolnum': (5.0, 5.0, 45), 'rowcoltab2': (5.0, 5.0, 0), 'rowcoltab1': (0, 0, -2)}
-------post_confirm ALe matchinglistcurrent=[]
-------post_confirm ALe turnUpDown+=1: 3

Received by ALe for playConfirmedMove:
  {'gameid': 9, 'angle': -180, 'sender': ('127.0.0.1', 46213), 'turnUpDown': 1, 'rowcolnum': (4.0, 5.0, 48), 'rowcoltab2': (4.0, 5.0, 0), 'rowcoltab1': (0, 0, -1)}
-------post_confirm ALe matchinglistcurrent=[]
-------post_confirm ALe turnUpDown+=1: 4
=======>
Clicked on [3.0, 4.0, 0]
Player 2 - ALe
 cfg.turnUpDown=4
 cfg.player_num=2, playerIsTabUp=False
 cfg.name/opponentname=ALe/Mararie
 cfg.deck.is_confirmable= No tiles were placed on the board
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (0, 0, -2)]
                   =[(0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -2), (0, 4, -1), (0, 5, -2), (0, 5, -1)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, -2, -2, -2, -2, -2, -1, -2, -1]
 cfg.deck._positions_moved=[]
 cfg.deck._rotations=[-180, 0, 0, 0, -120, 0, -120, 0, -60, 0, 0, 0, 0, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 16), (0, 1, 27), (0, 2, 34), (0, 3, 52), (0, 4, 28), (0, 5, 43)]
 cfg.deck.itemids=[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 929, 933, 937]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 1, -1), (0, 3, -1), (0, 5, -1), (0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -2), (0, 5, -2)]')
Tile at [3.0, 4.0, 0], rotation = -60, colors = gygryr
'r' pressed
reset: moving (3.0, 4.0, 0) to (0, 5, -1)
('reset: move_automatic ok=:', True)
=======>
Clicked on [3.0, 6.0, 0]
Player 2 - ALe
 cfg.turnUpDown=4
 cfg.player_num=2, playerIsTabUp=False
 cfg.name/opponentname=ALe/Mararie
 cfg.deck.is_confirmable= No tiles were placed on the board
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (0, 0, -2)]
                   =[(0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -2), (0, 4, -1), (0, 5, -2), (0, 5, -1)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, -2, -2, -2, -2, -2, -1, -2, -1]
 cfg.deck._positions_moved=[]
 cfg.deck._rotations=[-180, 0, 0, 0, -120, 0, -120, 0, -60, 0, 0, 0, 0, 0, -60]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 16), (0, 1, 27), (0, 2, 34), (0, 3, 52), (0, 4, 28), (0, 5, 43)]
 cfg.deck.itemids=[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 929, 933, 949]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 1, -1), (0, 2, -1), (0, 3, -1), (0, 4, -1), (0, 5, -1), (0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 4, -2)]')
Tile at [3.0, 6.0, 0], rotation = -60, colors = rybbyr
Tile at [3.0, 6.0, 0], rotation = -120, colors = rrybby
'r' pressed
reset: moving (3.0, 6.0, 0) to (0, 4, -1)
('reset: move_automatic ok=:', True)
=======>
Clicked on [3.0, 6.0, 0]
Player 2 - ALe
 cfg.turnUpDown=4
 cfg.player_num=2, playerIsTabUp=False
 cfg.name/opponentname=ALe/Mararie
 cfg.deck.is_confirmable= No tiles were placed on the board
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (0, 0, -2)]
                   =[(0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -2), (0, 4, -1), (0, 5, -2), (0, 5, -1)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, -2, -2, -2, -2, -2, -1, -2, -1]
 cfg.deck._positions_moved=[]
 cfg.deck._rotations=[-180, 0, 0, 0, -120, 0, -120, 0, -60, 0, 0, 0, -120, 0, -60]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 16), (0, 1, 27), (0, 2, 34), (0, 3, 52), (0, 4, 28), (0, 5, 43)]
 cfg.deck.itemids=[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 1, -1), (0, 2, -1), (0, 3, -1), (0, 4, -1), (0, 5, -1), (0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 4, -2)]')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
('Error in motionCallback. itemids=', '[936, 916, 917, 918, 928, 920, 932, 922, 930, 924, 925, 926, 962, 933, 949]')
('id[0]=', '931')
tile tile colors and angle: yggyrr 0 , rowcoltab=(3.0, 6.0, 0)
Tile at [3.0, 6.0, 0], rotation = -60, colors = ryggyr
tile tile colors and angle: ryggyr -60 , rowcoltab=(3.0, 6.0, 0)
Tile at [3.0, 6.0, 0], rotation = -120, colors = rryggy

Sent for confirm:  {'gameid': 9, 'angle': -120, 'sender': ('127.0.0.1', 46214), 'turnUpDown': 4, 'rowcolnum': (3.0, 6.0, 16), 'rowcoltab2': (3.0, 6.0, 0), 'rowcoltab1': (0, 0, -2)}
Forced space at 3,5
('find_matching_tiles gives: ', '[]')
-------post_confirm ALe matchinglistcurrent=[[]]
[]
-------post_confirm ALe turnUpDown+=1: 5
Forced space at 3,5
('find_matching_tiles gives: ', '[]')

Received by ALe for playConfirmedMove:
  {'gameid': 9, 'angle': -120, 'sender': ('127.0.0.1', 46213), 'turnUpDown': 1, 'rowcolnum': (4.0, 4.0, 42), 'rowcoltab2': (4.0, 4.0, 0), 'rowcoltab1': (0, 0, -1)}
Forced space at 3,5
('find_matching_tiles gives: ', '[]')
Forced space at 5,4
Forced space at 3,5
('find_matching_tiles gives: ', '[(0, 0, -1)]')
('find_matching_tiles gives: ', '[]')
-------post_confirm ALe matchinglistcurrent=[[(0, 0, -1)],
[]]
-------post_confirm ALe No cfg.turnUpDown: 5

Received by ALe for playConfirmedMove:
  {'gameid': 9, 'angle': -120, 'sender': ('127.0.0.1', 46213), 'turnUpDown': 1, 'rowcolnum': (5.0, 4.0, 23), 'rowcoltab2': (5.0, 4.0, 0), 'rowcoltab1': (0, 0, -1)}
Forced space at 5,4
Forced space at 3,5
('find_matching_tiles gives: ', '[(0, 0, -1)]')
('find_matching_tiles gives: ', '[]')
Forced space at 3,5
('find_matching_tiles gives: ', '[]')
-------post_confirm ALe matchinglistcurrent=[[]]



#Bug after fulfilling a forced space

Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
Forced space at 3,5
 cfg.deck.is_confirmable= No tiles were placed on the board
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -1), (0, 4, -2), (0, 5, -1), (0, 5, -2)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, 0, -2, -2, -2, -2, -1, -2, -1, -2]
 cfg.deck._positions_moved=[]
 cfg.deck._rotations=[-180, -240, 0, 0, -120, 0, -120, -120, 0, 0, 0, -120, 0, -180, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 925, 970, 929, 962, 1009, 1012]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11]
('find_matching_tiles gives: ', '[]')
=======>
Clicked on [4.0, 4.0, 0]
Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
Forced space at 3,5
 cfg.deck.is_confirmable= No tiles were placed on the board
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -1), (0, 4, -2), (0, 5, -1), (0, 5, -2)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, 0, -2, -2, -2, -2, -1, -2, -1, -2]
 cfg.deck._positions_moved=[]
 cfg.deck._rotations=[-180, -240, 0, 0, -120, 0, -120, -120, 0, 0, 0, -120, 0, -180, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 925, 970, 929, 962, 1009, 1012]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 2, -1), (0, 4, -1), (0, 0, -2), (0, 2, -2), (0, 3, -2), (0, 4, -2), (0, 5, -2)]')
=======>
Clicked on [3.0, 4.0, 0]
Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
Forced space at 3,5
 cfg.deck.is_confirmable= No tiles were placed on the board
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -1), (0, 4, -2), (0, 5, -1), (0, 5, -2)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, 0, -2, -2, -2, -2, -1, -2, -1, -2]
 cfg.deck._positions_moved=[]
 cfg.deck._rotations=[-180, -240, 0, 0, -120, 0, -120, -120, 0, 0, 0, -120, 0, -180, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 925, 970, 929, 962, 1009, 1012]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 1, -1), (0, 3, -1), (0, 5, -1), (0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -2)]')
=======>
Clicked on [4.0, 4.0, 0]
Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
Forced space at 3,5
 cfg.deck.is_confirmable= No tiles were placed on the board
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -1), (0, 4, -2), (0, 5, -1), (0, 5, -2)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, 0, -2, -2, -2, -2, -1, -2, -1, -2]
 cfg.deck._positions_moved=[]
 cfg.deck._rotations=[-180, -240, 0, 0, -120, 0, -120, -120, 0, 0, 0, -120, 0, -180, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 925, 970, 929, 962, 1009, 1012]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 2, -1), (0, 4, -1), (0, 0, -2), (0, 2, -2), (0, 3, -2), (0, 4, -2), (0, 5, -2)]')
=======>
Clicked on [3.0, 4.0, 0]
Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
Forced space at 3,5
 cfg.deck.is_confirmable= No tiles were placed on the board
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -1), (0, 4, -2), (0, 5, -1), (0, 5, -2)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, 0, -2, -2, -2, -2, -1, -2, -1, -2]
 cfg.deck._positions_moved=[]
 cfg.deck._rotations=[-180, -240, 0, 0, -120, 0, -120, -120, 0, 0, 0, -120, 0, -180, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 925, 970, 929, 962, 1009, 1012]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 1, -1), (0, 3, -1), (0, 5, -1), (0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -2)]')
Tile at [3.0, 4.0, 0], rotation = -60, colors = ybggyb

Reset!
reset: moving (3.0, 4.0, 0) to (0, 2, -2)
('reset: move_automatic ok=:', True)
Forced space at 3,5
('find_matching_tiles gives: ', '[]')
=======>
Clicked on [4.0, 4.0, 0]
Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
Forced space at 3,5
 cfg.deck.is_confirmable= No tiles were placed on the board
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3, -2), (0, 4, -1), (0, 4, -2), (0, 5, -1), (0, 5, -2)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, 0, -2, -2, -2, -2, -1, -2, -1, -2]
 cfg.deck._positions_moved=[]
 cfg.deck._rotations=[-180, -240, 0, 0, -120, 0, -120, -120, 0, 0, -60, -120, 0, -180, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 970, 929, 962, 1009, 1012]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 2, -1), (0, 4, -1), (0, 0, -2), (0, 2, -2), (0, 3, -2), (0, 4, -2), (0, 5, -2)]')
move: You cannot move the tile as it is to this hexagon
Tile at [4.0, 4.0, 0], rotation = -180, colors = bbrrgg
Tile at [4.0, 4.0, 0], rotation = -240, colors = gbbrrg
=======>
Clicked on [4.0, 4.0, 0]
Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
 cfg.deck.is_confirmable= There are tiles of Player 2 out
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(0, 0, -2), (0, 1, -2), (0, 2, -2), (4.0, 4.0, 0), (0, 4, -1), (0, 4, -2), (0, 5, -1), (0, 5, -2)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, 0, -2, -2, -2, 0, -1, -2, -1, -2]
 cfg.deck._positions_moved=[(4.0, 4.0, 28)]
 cfg.deck._rotations=[-180, -240, 0, 0, -120, 0, -120, -120, 0, 0, -60, -240, 0, -180, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1063, 929, 962, 1009, 1012]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 2, -1), (0, 4, -1), (0, 0, -2), (0, 2, -2), (4.0, 4.0, 0), (0, 4, -2), (0, 5, -2)]')
Tile at [4.0, 4.0, 0], rotation = -300, colors = ggbbrr
Tile at [4.0, 4.0, 0], rotation = 0, colors = rggbbr
y outside the original widget
Forced space at 3,5
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
('Error in motionCallback. itemids=', '[1008, 989, 917, 918, 928, 920, 931, 1011, 923, 924, 1052, 1074, 929, 962, 1009, 1012]')
('id[0]=', '1010')
Tile at [4.0, 4.0, 0], rotation = -60, colors = bgrrbg
Tile at [4.0, 4.0, 0], rotation = -120, colors = gbgrrb
=======>
Clicked on [4.0, 4.0, 0]
Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
 cfg.deck.is_confirmable= There are tiles of Player 2 out
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(4.0, 4.0, 0), (0, 1, -2), (0, 2, -2), (0, 3.0, -2), (0, 4, -1), (0, 4, -2), (0, 5, -1), (0, 5, -2)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, 0, 0, -2, -2, -2, -1, -2, -1, -2]
 cfg.deck._positions_moved=[(4.0, 4.0, 27)]
 cfg.deck._rotations=[-180, -240, 0, 0, -120, 0, -120, -120, -120, 0, -60, 0, 0, -180, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 989, 917, 918, 928, 920, 931, 1011, 1076, 924, 1052, 1074, 929, 962, 1009, 1012]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 2, -1), (0, 4, -1), (4.0, 4.0, 0), (0, 2, -2), (0, 3.0, -2), (0, 4, -2), (0, 5, -2)]')
Tile at [4.0, 4.0, 0], rotation = -180, colors = bgbgrr
Tile at [4.0, 4.0, 0], rotation = -240, colors = rbgbgr
Tile at [4.0, 4.0, 0], rotation = -300, colors = rrbgbg
Tile at [4.0, 4.0, 0], rotation = 0, colors = grrbgb
Tile at [4.0, 4.0, 0], rotation = -60, colors = bgrrbg
Tile at [4.0, 4.0, 0], rotation = -120, colors = gbgrrb
Tile at [4.0, 4.0, 0], rotation = -180, colors = bgbgrr
Tile at [4.0, 4.0, 0], rotation = -240, colors = rbgbgr

Reset!
reset: moving (4.0, 4.0, 0) to (0, 0, -2)
('reset: move_automatic ok=:', True)
Forced space at 3,5
('find_matching_tiles gives: ', '[]')
=======>
Clicked on [4.0, 4.0, 0]
Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
Forced space at 3,5
 cfg.deck.is_confirmable= No tiles were placed on the board
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (0, 0, -1), (0, 1, -1), (0, 2, -1)]
                   =[(4.0, 6.0, 0), (0, 3, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3.0, -2), (0, 4, -1), (0, 4, -2), (0, 5, -1), (0, 5, -2)]
 cfg.deck._table=[0, -1, -1, -1, 0, -1, 0, 0, -2, -2, -2, -2, -1, -2, -1, -2]
 cfg.deck._positions_moved=[]
 cfg.deck._rotations=[-180, -240, 0, 0, -120, 0, -120, -120, -240, 0, -60, 0, 0, -180, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16)]
 cfg.deck._confirmed[1]=[(0, 0, 42), (0, 1, 23), (0, 2, 14), (0, 3, 22), (0, 4, 13), (0, 5, 35)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 989, 917, 918, 928, 920, 931, 1011, 1093, 924, 1052, 1074, 929, 962, 1009, 1012]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11]
('find_matching_tiles gives: ', '[(0, 0, -1), (0, 2, -1), (0, 4, -1), (0, 0, -2), (0, 2, -2), (0, 3.0, -2), (0, 4, -2), (0, 5, -2)]')
Forced space at 3,5
('find_matching_tiles gives: ', '[]')
Tile at [4.0, 4.0, 0], rotation = -300, colors = bgrgbr
tile tile colors and angle: bgrgbr -300 , rowcoltab=(4.0, 4.0, 0)
Tile at [4.0, 4.0, 0], rotation = 0, colors = rbgrgb
tile tile colors and angle: rbgrgb 0 , rowcoltab=(4.0, 4.0, 0)
Tile at [4.0, 4.0, 0], rotation = -60, colors = brbgrg
tile tile colors and angle: brbgrg -60 , rowcoltab=(4.0, 4.0, 0)
Tile at [4.0, 4.0, 0], rotation = -120, colors = gbrbgr
Forced space at 3,5
('find_matching_tiles gives: ', '[]')

Confirm!
Forced space at 3,5
('find_matching_tiles gives: ', '[]')

Sent for confirm:  {'gameid': 9, 'angle': -120, 'sender': ('127.0.0.1', 46213), 'turnUpDown': 5, 'rowcolnum': (4.0, 4.0, 42), 'rowcoltab2': (4.0, 4.0, 0), 'rowcoltab1': (0, 0, -1)}
Forced space at 5,4
Forced space at 3,5
('find_matching_tiles gives: ', '[(0, 0, -1)]')
('find_matching_tiles gives: ', '[]')
-------post_confirm Mararie matchinglistcurrent=[[(0, 0, -1)],
[]]
-------post_confirm Mararie No cfg.turnUpDown: 5
tile tile colors and angle: gyyrrg 0 , rowcoltab=(5.0, 4.0, 0)
Tile at [5.0, 4.0, 0], rotation = -60, colors = ggyyrr
tile tile colors and angle: ggyyrr -60 , rowcoltab=(5.0, 4.0, 0)
Tile at [5.0, 4.0, 0], rotation = -120, colors = rggyyr
Forced space at 5,4
Forced space at 3,5
('find_matching_tiles gives: ', '[(5.0, 4.0, 0)]')
('find_matching_tiles gives: ', '[]')
Tile at [5.0, 4.0, 0], rotation = -180, colors = rrggyy
tile tile colors and angle: rrggyy -180 , rowcoltab=(5.0, 4.0, 0)
Tile at [5.0, 4.0, 0], rotation = -240, colors = yrrggy
tile tile colors and angle: yrrggy -240 , rowcoltab=(5.0, 4.0, 0)
=======>
Clicked on [5.0, 4.0, 0]
Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
tile tile colors and angle: yrrggy -240 , rowcoltab=(5.0, 4.0, 0)
 cfg.deck.is_confirmable= Colors do not match
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (4.0, 4.0, 0), (5.0, 4.0, 0), (0, 1, -1)]
                   =[(4.0, 6.0, 0), (0, 2, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3.0, -2), (0, 3, -1), (0, 4, -2), (0, 4, -1), (0, 5, -2), (0, 5, -1)]
 cfg.deck._table=[0, 0, 0, -1, 0, -1, 0, 0, -2, -2, -2, -2, -1, -2, -1, -2, -1]
 cfg.deck._positions_moved=[(5.0, 4.0, 23)]
 cfg.deck._rotations=[-180, -120, -240, 0, -120, 0, -120, -120, -240, 0, -60, 0, 0, -180, 0, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16), (4.0, 4.0, 42)]
 cfg.deck._confirmed[1]=[(0, 0, 23), (0, 1, 14), (0, 2, 22), (0, 3, 13), (0, 4, 35), (0, 5, 53)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 1106, 1113, 918, 928, 920, 931, 1011, 1093, 924, 1052, 1074, 929, 962, 1009, 1012, 1107]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11, 53]
('find_matching_tiles gives: ', '[(5.0, 4.0, 0)]')
Tile at [5.0, 4.0, 0], rotation = -300, colors = yyrrgg
tile tile colors and angle: yyrrgg -300 , rowcoltab=(5.0, 4.0, 0)
=======>
Clicked on [5.0, 4.0, 0]
Player 1 - Mararie
 cfg.turnUpDown=5
 cfg.player_num=1, playerIsTabUp=True
 cfg.name/opponentname=Mararie/ALe
tile tile colors and angle: yyrrgg -300 , rowcoltab=(5.0, 4.0, 0)
 cfg.deck.is_confirmable= Colors do not match
<=======
 cfg.deck._positions=[(4.0, 5.0, 0), (4.0, 4.0, 0), (5.0, 4.0, 0), (0, 1, -1)]
                   =[(4.0, 6.0, 0), (0, 2, -1), (5.0, 5.0, 0), (3.0, 6.0, 0)]
                   =[(0, 0, -2), (0, 1, -2), (0, 2, -2), (0, 3.0, -2), (0, 3, -1), (0, 4, -2), (0, 4, -1), (0, 5, -2), (0, 5, -1)]
 cfg.deck._table=[0, 0, 0, -1, 0, -1, 0, 0, -2, -2, -2, -2, -1, -2, -1, -2, -1]
 cfg.deck._positions_moved=[(5.0, 4.0, 23)]
 cfg.deck._rotations=[-180, -120, -300, 0, -120, 0, -120, -120, -240, 0, -60, 0, 0, -180, 0, 0, 0]
 cfg.deck._confirmed[0]=[(4.0, 6.0, 29), (5.0, 5.0, 45), (4.0, 5.0, 48), (3.0, 6.0, 16), (4.0, 4.0, 42)]
 cfg.deck._confirmed[1]=[(0, 0, 23), (0, 1, 14), (0, 2, 22), (0, 3, 13), (0, 4, 35), (0, 5, 53)]
 cfg.deck._confirmed[2]=[(0, 0, 27), (0, 1, 34), (0, 2, 52), (0, 3, 28), (0, 4, 43), (0, 5, 11)]
 cfg.deck.itemids=[1008, 1106, 1116, 918, 928, 920, 931, 1011, 1093, 924, 1052, 1074, 929, 962, 1009, 1012, 1107]
 cfg.deck.dealt=[48, 42, 23, 14, 29, 22, 45, 16, 27, 34, 52, 28, 13, 43, 35, 11, 53]
('find_matching_tiles gives: ', '[(5.0, 4.0, 0)]')
 
 widget = .canvas
 type = 4
 state = 16
 player_num = 3
 delta =0
x, y = 219, 283
(' x_root, y_root = ', '(1026, 440)')
offset (if in cfg.canvas!) = (5.0, 4.0)
off_to_pixel=(212.5, 280.8076211353316)
387.5
Tile at [5.0, 4.0, 0], rotation = 0, colors = gyyrrg
tile tile colors and angle: gyyrrg 0 , rowcoltab=(5.0, 4.0, 0)
Tile at [5.0, 4.0, 0], rotation = -60, colors = ggyyrr
tile tile colors and angle: ggyyrr -60 , rowcoltab=(5.0, 4.0, 0)
Tile at [5.0, 4.0, 0], rotation = -120, colors = rggyyr
Forced space at 5,4
Forced space at 3,5
('find_matching_tiles gives: ', '[(5.0, 4.0, 0)]')
('find_matching_tiles gives: ', '[]')

Confirm!
Forced space at 5,4
Forced space at 3,5
('find_matching_tiles gives: ', '[(5.0, 4.0, 0)]')
('find_matching_tiles gives: ', '[]')

Sent for confirm:  {'gameid': 9, 'angle': -120, 'sender': ('127.0.0.1', 46213), 'turnUpDown': 5, 'rowcolnum': (5.0, 4.0, 23), 'rowcoltab2': (5.0, 4.0, 0), 'rowcoltab1': (0, 0, -1)}
Forced space at 3,5
('find_matching_tiles gives: ', '[]')
-------post_confirm Mararie matchinglistcurrent=[[]]
[]
