






#CHECK BUG: while debugging I got all stippled, ie nobody's turn
['turn=1', 'Player1 pl1', 'Forced: False', 'received: ', (2.0, 3.0, 0, 8, 0), 'match cur:', [], 'match opp:', [], 'turn=: 2']
['turn=2', 'Pycharm pl2', 'Forced: False', 'confirmed:', (3.0, 2.0, 0, 6, 0), 'match cur:', [], 'match opp:', [], 'turn=: 3']
['turn=3', 'Player1 pl1', 'Forced: False', 'received: ', (4.0, 3.0, 0, 30, -60), 'match cur:', [], 'match opp:', [], 'turn=: 4']
['turn=4', 'Pycharm pl2', 'Forced: False', 'received: ', (3.0, 3.0, 0, 7, -180), 'match cur:', [], 'match opp:', [], 'turn=: 5']
  =======>







#BUG
more than one rowcolnum per tiles in confirmed positions. It should not happen

['turn=1', 'Pycharm pl1', 'Forced: False', 'confirmed:', (3.0, 3.0, 0, 48, 0), 'match cur:', [], 'match opp:', [], 'turn=: 2']
['turn=2', ' pl2', 'Forced: False', 'confirmed:', (2.0, 4.0, 0, 45, -180), 'match cur:', [], 'match opp:', [], 'turn=: 3']
['turn=3', 'Pycharm pl1', 'Forced: False', 'confirmed:', (4.0, 3.0, 0, 29, -60), 'match cur:', [], 'match opp:', [], 'turn=: 4']
['turn=4', ' pl2', 'Forced: False', 'confirmed:', (4.0, 2.0, 0, 52, -60), 'match cur:', [], 'match opp:', [], 'turn=: 5']
['turn=5', 'Pycharm pl1', 'Forced: False', 'confirmed:', (4.0, 1.0, 0, 13, 0), 'match cur:', [], 'match opp:', [], 'turn=: 6']
['turn=6', ' pl2', 'Forced: False', 'confirmed:', (1.0, 4.0, 0, 16, 0), 'match cur:', [], 'match opp:', [], 'turn=: 7']
['turn=7', 'Pycharm pl1', 'Forced: False', 'confirmed:', (5.0, 3.0, 0, 42, -300), 'match cur:', [], 'match opp:', [], 'turn=: 8']
['turn=8', ' pl2', 'Forced: False', 'confirmed:', (0.0, 5.0, 0, 27, 0), 'match cur:', [], 'match opp:', [], 'turn=: 9']
['turn=9', 'Pycharm pl1', 'Forced: False', 'confirmed:', (6.0, 4.0, 0, 15, -300), 'match cur:', [], 'match opp:', [], 'turn=: 10']
['turn=10', ' pl2', 'Forced: False', 'confirmed:', (7.0, 4.0, 0, 28, 0), 'match cur:', [], 'match opp:', [], 'turn=: 11']
['turn=11', 'Pycharm pl1', 'Forced: False', 'confirmed:', (8.0, 5.0, 0, 53, 0), 'match cur:', [], 'match opp:', [], 'turn=: 12']
['turn=12', ' pl2', 'Forced: False', 'confirmed:', (1.0, 5.0, 0, 34, 0), 'match cur:', [], 'match opp:', [], 'turn=: 13']
['turn=13', 'Pycharm pl1', 'Forced: False', 'confirmed:', (6.0, 0.0, 0, 44, 0), 'match cur:', [], 'match opp:', [], 'turn=: 14']
['turn=14', ' pl2', 'Forced: False', 'confirmed:', (0.0, 6.0, 0, 11, -60), 'match cur:', [], 'match opp:', [], 'turn=: 15']
['turn=15', 'Pycharm pl1', 'Forced: False', 'confirmed:', (6.0, 1.0, 0, 22, -60), 'match cur:', [], 'match opp:', [], 'turn=: 16']
['turn=16', ' pl2', 'Forced: False', 'confirmed:', (6.0, 0.0, 0, 4, 0), 'match cur:', [], 'match opp:', [], 'turn=: 17']
['turn=17', 'Pycharm pl1', 'Forced: False', 'confirmed:', (6.0, 0.0, 0, 20, -60), 'match cur:', [], 'match opp:', [], 'turn=: 18']
['turn=18', ' pl2', 'Forced: False', 'confirmed:', (9.0, 7.0, 0, 56, 0), 'match cur:', [[(0, 5, -2, 55)], [(0, 5, -2, 55)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (5.0, 4.0, 0, 55, -120), 'match cur:', [[(0, 3, -2, 33)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (6.0, 5.0, 0, 33, -120), 'match cur:', [[(0, 2, -2, 38)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (7.0, 5.0, 0, 38, 0), 'match cur:', [[(0, 5, -2, 8)], [(0, 5, -2, 8)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (3.0, 4.0, 0, 8, -60), 'match cur:', [[(0, 5, -2, 39)], [(0, 4, -2, 41)], [(0, 5, -2, 39)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (4.0, 6.0, 0, 39, -300), 'match cur:', [[(0, 4, -2, 41)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (3.0, 3.0, 0, 41, -180), 'match cur:', [[(0, 5, -2, 1)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (2.0, 5.0, 0, 1, -60), 'match cur:', [[(0, 5, -2, 36)], [(0, 1, -2, 50)], [(0, 1, -2, 50)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (2.0, 4.0, 0, 50, -180), 'match cur:', [[(0, 4, -2, 36)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (3.0, 2.0, 0, 36, -300), 'match cur:', [[(0, 5, -2, 40)], [(0, 5, -2, 40)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (2.0, 3.0, 0, 40, 0), 'match cur:', [[(0, 5, -2, 30)]], 'Forced afterelse:True', 'turn=: 18']
['turn=18', ' pl2', 'Forced: True', 'confirmed:', (3.0, 6.0, 0, 30, -60), 'match cur:', [], 'Forced becomes:False', 'turn=: 19']
['turn=19', 'Pycharm pl1', 'Forced: False', 'confirmed:', (8.0, 8.0, 0, 51, -240), 'match cur:', [[(0, 0, -1, 23), (0, 3, -1, 49), (0, 5, -1, 18)], [(0, 0, -1, 23)], [(0, 3, -1, 49)]], 'Forced afterelse:True', 'turn=: 19']
['turn=19', 'Pycharm pl1', 'Forced: True', 'confirmed:', (1.0, 7.0, 0, 49, -120), 'match cur:', [[(0, 0, -1, 23), (0, 4, -1, 18)], [(0, 0, -1, 23), (0, 5, -1, 47)], [(0, 5, -1, 47)], [(0, 1, -1, 35), (0, 4, -1, 18)]], 'Forced afterelse:True', 'turn=: 19']
['turn=19', 'Pycharm pl1', 'Forced: True', 'confirmed:', (9.0, 8.0, 0, 23, -180), 'match cur:', [[(0, 4, -1, 47)], [(0, 4, -1, 47)], [(0, 0, -1, 35), (0, 3, -1, 18)], [(0, 5, -1, 7)]], 'Forced afterelse:True', 'turn=: 19']
['turn=19', 'Pycharm pl1', 'Forced: True', 'confirmed:', (1.0, 6.0, 0, 7, -120), 'match cur:', [[(0, 4, -1, 47)], [(0, 4, -1, 47)], [(0, 0, -1, 35), (0, 3, -1, 18)], [(0, 2, -1, 21)]], 'Forced afterelse:True', 'turn=: 19']
['turn=19', 'Pycharm pl1', 'Forced: True', 'confirmed:', (1.0, 5.0, 0, 21, 0), 'match cur:', [[(0, 3, -1, 47)], [(0, 3, -1, 47)], [(0, 0, -1, 35), (0, 2, -1, 18)]], 'Forced afterelse:True', 'turn=: 19']
['turn=19', 'Pycharm pl1', 'Forced: True', 'confirmed:', (0.0, 8.0, 0, 18, -300), 'match cur:', [[(0, 2, -1, 47)], [(0, 2, -1, 47)]], 'Forced afterelse:True', 'turn=: 19']
['turn=19', 'Pycharm pl1', 'Forced: True', 'confirmed:', (5.0, 5.0, 0, 47, 0), 'match cur:', [], 'Forced becomes:False', 'turn=: 20']
['turn=20', ' pl2', 'Forced: False', 'confirmed:', (1.0, 8.0, 0, 2, -60), 'match cur:', [], 'match opp:', [], 'turn=: 21']









#####################
SOLVED: BUG Forced tile lead to Impossible match
Solitaire with seed 0. place in Deck.deal this:
    if num == 14: num += 1

['turn=1', 'Pycharm pl1', 'Forced: False', 'confirmed:', (3.0, 2.0, 0, 48, 0), 'match cur:', [], 'match opp:', [], 'turn=: 2']
['turn=2', 'Pycharm pl1', 'Forced: False', 'confirmed:', (2.0, 3.0, 0, 45, -180), 'match cur:', [], 'match opp:', [], 'turn=: 3']
['turn=3', 'Pycharm pl1', 'Forced: False', 'confirmed:', (4.0, 2.0, 0, 29, -60), 'match cur:', [], 'match opp:', [], 'turn=: 4']
['turn=4', 'Pycharm pl1', 'Forced: False', 'confirmed:', (4.0, 1.0, 0, 16, -60), 'match cur:', [], 'match opp:', [[(0, 2, -1, 14), (0, 4, -1, 13)]], 'turn=: 5']

['turn=1', 'Pycharm pl1', 'Forced: False', 'confirmed:', (1.0, 1.0, 0, 48, 0), 'match cur:', [], 'match opp:', [], 'turn=: 2']
['turn=2', ' pl1', 'Forced: False', 'confirmed:', (0.0, 2.0, 0, 45, -180), 'match cur:', [], 'match opp:', [], 'turn=: 3']
['turn=3', 'Pycharm pl1', 'Forced: False', 'confirmed:', (2.0, 1.0, 0, 29, -60), 'match cur:', [], 'match opp:', [], 'turn=: 4']
['turn=4', ' pl1', 'Forced: False', 'confirmed:', (2.0, 0.0, 0, 52, -60), 'match cur:', [], 'match opp:', [[]], 'turn=: 5']
Good. Now pl1 plays something and it says "Fill all forced spaces"
that is because check_forced in is_confirmable gets the impossible forced space
I create a new separate method purge_matchings. TODO see if check_forced everywhere should be replaced!
shit i created an infinite loop. in is_confirmable I do not check forced when virtual variable is present. 
after confirming the tile creating impossible matches purge_matchings>is_confirmable gives msg="A neighboring tile would have to match three identical colors" and it is good, it removes the wrong match. post_confirm >highlight_forced_and_matching retruns matchinglist = [[]]. see my comment #TODO can be [[]] . that was one problem! I corrected it.
Now when i move another tile somewhere else and purge_matchings>is_confirmable gives "more than 1 tile from hand1 and hand2 are out". boh, in any case it returns [[]] matches as it should be. The problem is that len(matches) is true and I get msg="Fill all forced spaces". I correct that! 
BUG Now i still see that if I try to move the guilty tile i get "Fill all forced spaces"! That happens because 
  obliged, matches = self.purge_matchings(table = 'current') #matches can be [[]]
returns the guilty tile on board 0. That happens because is_confirmable says it is confirmable. WHY? is_confirmable is called with [3, 0, 0, 120, 13, (2,2,0)]. 120 does not sound good
elif num_curr_tiles_on_table - num_confirmed_tiles_on_table == 1   is 6-4=2 so it skips many checks!
SOLVED! 

pl1: 1st
pl2: 1st rotx3, on South left
pl1: 4th rotx1, on top right
pl2: 1st rotx1, on top
pl1: 5th tile num 13 is impossible. ok now solved and it is removed. Pl1 plays something and it says "Fill all forced spaces"



#####################
SOLVED: BUG last one creates forced on same pl2, but turn is changed
['turn=1', 'Pycharm pl1', 'Forced: False', 'confirmed:', (2.0, 1.0, 0, 48, 0), 'match cur:', [], 'match opp:', [], 'turn=: 2']
['turn=2', 'Pycharm pl1', 'Forced: False', 'confirmed:', (2.0, 2.0, 0, 45, 0), 'match cur:', [], 'match opp:', [], 'turn=: 3']
['turn=3', 'Pycharm pl1', 'Forced: False', 'confirmed:', (3.0, 2.0, 0, 42, -60), 'match cur:', [], 'match opp:', [[(0, 3, -2, 52)]], 'turn=: 4']
['turn=4', 'Pycharm pl1', 'Forced: True', 'confirmed:', (3.0, 1.0, 0, 52, -180), 'match cur:', [], 'Forced becomes:False', 'turn=: 4']
['turn=4', 'Pycharm pl1', 'Forced: False', 'confirmed:', (4.0, 1.0, 0, 27, -300), 'match cur:', [], 'match opp:', [[(0, 5, -1, 35)], []], 'turn=: 5']


pl1: 1
pl2: 1 below
pl1: 1 rotx1 below right
pl2: 4 forced
pl2: 2 rotx5 top right 




#####################
SOLVED: BUG Forced tile does not change turn
['turn=1', 'Pycharm pl1', 'Forced: False', 'confirmed:', (3.0, 1.0, 0, 48, 0), 'match cur:', [], 'match opp:', [], 'turn=: 2']
['turn=2', 'Pycharm pl1', 'Forced: False', 'confirmed:', (3.0, 2.0, 0, 45, 0), 'match cur:', [], 'match opp:', [], 'turn=: 3']
['turn=3', 'Pycharm pl1', 'Forced: False', 'confirmed:', (4.0, 3.0, 0, 42, -180), 'match cur:', [[(0, 0, -1, 23)]], 'Forced afterelse:True', 'turn=: 3']
['turn=3', 'Pycharm pl1', 'Forced: True', 'confirmed:', (4.0, 2.0, 0, 23, -300), 'match cur:', [], 'Forced becomes:False', 'turn=: 3']

pl1: first
pl2: first below
pl1: first rotx3 on bottom right


##################### SOLVED Bug: after double forced pl1 plays, but turn does not changes
solved: pl2 created forced on pl1. pl1 complies, and another forced is created. then it should have been pl1 turn,  but it changed to pl2
maybe postconfirm does not take into account when you have to 

ran = 0
global ran
ran = (ran+12) % (len(self.undealt) - 1) #DOTO RM LATER!

pl1: 1st rot once in 2,1
pl2: last below
pl1: 1st below
pl2: 2nd rot once on top right
pl1: forced
pl1: forced
pl1: first on bottom
pl2: forced 
pl2: 2nd (48) on bottom left
pl1: forced
pl1: 1st rot once on top right
pl2: forced NB: same tile forced on two places. places highlighted in green and yellow. put it on the right

['turn=1', 'Pycharm pl1', 'Forced: False', 'confirmed:', (2.0, 3.0, 0, 55, 0), 'match cur:', [], 'match opp:', [], 'turn=: 2']
['turn=2', 'Pycharm pl1', 'Forced: False', 'received: ', (2.0, 2.0, 0, 44, 0), 'match cur:', [], 'match opp:', [], 'turn=: 3']
['turn=3', 'Pycharm pl1', 'Forced: False', 'confirmed:', (2.0, 1.0, 0, 5, -60), 'match cur:', [], 'match opp:', [], 'turn=: 4']
['turn=4', 'Pycharm pl1', 'Forced: False', 'received: ', (3.0, 0.0, 0, 30, -60), 'match cur:', [], 'match opp:', [[(0, 5, -1, 51)]], 'turn=: 5']
['turn=5', 'Pycharm pl1', 'Forced: True', 'confirmed:', (3.0, 1.0, 0, 51, -180), 'match cur:', [[(0, 0, -1, 36)]], 'Forced aftelse:True', 'turn=: 5']
['turn=5', 'Pycharm pl1', 'Forced: True', 'confirmed:', (3.0, 2.0, 0, 36, -240), 'match cur:', [], 'Forced becomes:False', 'turn=: 5']
['turn=5', 'Pycharm pl1', 'Forced: False', 'confirmed:', (2.0, 4.0, 0, 27, 0), 'match cur:', [], 'match opp:', [[(0, 1, -2, 41)]], 'turn=: 6']
['turn=6', 'Pycharm pl1', 'Forced: True', 'received: ', (3.0, 3.0, 0, 41, 0), 'match cur:', [], 'Forced becomes:False', 'turn=: 6']
['turn=6', 'Pycharm pl1', 'Forced: False', 'received: ', (2.0, 5.0, 0, 48, 0), 'match cur:', [], 'match opp:', [], 'turn=: 7']





#####################
Forced tile that would create an impossible space for pl2. random = 0
[['turn=1', 'Player48296 pl1', 'confirmed:', (3.0, 2.0, 0, 1, 0), 'matching:', [], 'turn=: 2'], 
['turn=2', 'Player48296 pl1', 'received: ', (3.0, 3.0, 0, 7, -240), 'matching:', [], 'turn=: 3'], 
['turn=3', 'Player48296 pl1', 'confirmed:', (3.0, 1.0, 0, 2, -240), 'matching:', [], 'turn=: 4'], 
['turn=4', 'Player48296 pl1', 'received: ', (2.0, 1.0, 0, 8, -240), 'matching:', [], 'turn=: 5'], 
['turn=5', 'Player48296 pl1', 'confirmed:', (2.0, 2.0, 0, 3, -240), 'matching:', [[(0, 1, -1), (0, 2, -1)]], 'turn=: 5'], 
['turn=5', 'Player48296 pl1', 'confirmed:', (2.0, 3.0, 0, 5, -240), 'matching:', [], 'turn=: 5'], 
['turn=5', 'Player48296 pl1', 'confirmed:', (1.0, 0.0, 0, 4, 0), 'matching:', [[(0, 0, -1)]], 'turn=: 5'], 
['turn=5', 'Player48296 pl1', 'confirmed:', (1.0, 1.0, 0, 6, -60), 'matching:', [], 'turn=: 6'], 
['turn=6', 'Player48296 pl1', 'received: ', (1.0, 2.0, 0, 10, 0), 'matching:', [], 'turn=: 6'], 
['turn=6', 'Player48296 pl1', 'received: ', (0.0, 3.0, 0, 12, -180), 'matching:', [[(0, 1, -2), (0, 3, -2)], [(0, 0, -2)]], 'turn=: 6'], 
['turn=6', 'Player48296 pl1', 'received: ', (1.0, 3.0, 0, 11, -300), 'matching:', [[(0, 1, -2)],[(0, 0, -2)]], 'turn=: 6'], 
['turn=6', 'Player48296 pl1', 'received: ', (2.0, 4.0, 0, 14, -120), 'matching:', [[(0, 0, -2)]], 'turn=: 6']]

[['turn=1', 'Player48297 pl2', 'received: ', (3.0, 2.0, 0, 1, 0), 'matching:', [], 'turn=: 2'], 
['turn=2', 'Player48297 pl2', 'confirmed:', (3.0, 3.0, 0, 7, -240), 'matching:', [], 'turn=: 3'], 
['turn=3', 'Player48297 pl2', 'received: ', (3.0, 1.0, 0, 2, -240), 'matching:', [], 'turn=: 4'], 
['turn=4', 'Player48297 pl2', 'confirmed:', (2.0, 1.0, 0, 8, -240), 'matching:', [], 'turn=: 5'], 
['turn=5', 'Player48297 pl2', 'received: ', (2.0, 2.0, 0, 3, -240), 'matching:', [[(0, 1, -1), (0, 2, -1)]], 'turn=: 5'], 
['turn=5', 'Player48297 pl2', 'received: ', (2.0, 3.0, 0, 5, -240), 'matching:', [], 'turn=: 5'], 
['turn=5', 'Player48297 pl2', 'received: ', (1.0, 0.0, 0, 4, 0), 'matching:', [[(0, 0, -1)]], 'turn=: 5'], 
['turn=5', 'Player48297 pl2', 'received: ', (1.0, 1.0, 0, 6, -60), 'matching:', [], 'turn=: 6'], 
['turn=6', 'Player48297 pl2', 'confirmed:', (1.0, 2.0, 0, 10, 0), 'matching:', [], 'turn=: 6'], 
['turn=6', 'Player48297 pl2', 'confirmed:', (0.0, 3.0, 0, 12, -180), 'matching:', [[(0, 1, -2), (0, 3, -2)],[(0, 0, -2)]], 'turn=: 6'], 
['turn=6', 'Player48297 pl2', 'confirmed:', (1.0, 3.0, 0, 11, -300), 'matching:', [[(0, 1, -2)],[(0, 0, -2)]], 'turn=: 6'], 
['turn=6', 'Player48297 pl2', 'confirmed:', (2.0, 4.0, 0, 14, -120), 'matching:', [[(0, 0, -2)]], 'turn=: 6']]

Clicked on [1.0, 6.0, 0]
  Player 2 - Player48297
  cfg.turnUpDown=6
  cfg.player_num=2, playerIsTabUp=False
  cfg.name/opponentname=Player48297/Player48296
  cfg.deck.is_confirmable= A neighboring tile would have to match three identical colors
  cfg.deck._positions=[(3.0, 2.0, 0), (3.0, 1.0, 0), (2.0, 2.0, 0), (1.0, 0.0, 0)]
                   =[(2.0, 3.0, 0), (1.0, 1.0, 0), (3.0, 3.0, 0), (2.0, 1.0, 0)]
                   =[(0.0, 2.0, 0), (1.0, 2.0, 0), (1.0, 3.0, 0), (0.0, 3.0, 0), (0, 0, -1), (2.0, 4.0, 0), (0, 1, -1), (0, 1, -2), (0, 2, -1), (0, 3, -1), (0, 4, -1), (0, 5, -1), (0, 2, -2), (0, 3, -2), (0, 4, -2), (0, 5, -2)]
  cfg.deck._table=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, -2, -1, -1, -1, -1, -2, -2, -2, -2]
  cfg.deck._positions_moved=[(0.0, 2.0, 9)]
  cfg.deck._rotations=[0, -240, -240, 0, -240, -60, -240, -240, -120, 0, -300, -180, 0, -120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  cfg.deck._confirmed[0]=[(3.0, 2.0, 1), (3.0, 3.0, 7), (3.0, 1.0, 2), (2.0, 1.0, 8), (2.0, 2.0, 3), (2.0, 3.0, 5), (1.0, 0.0, 4), (1.0, 1.0, 6), (1.0, 2.0, 10), (0.0, 3.0, 12), (1.0, 3.0, 11), (2.0, 4.0, 14)]
  cfg.deck._confirmed[1]=[(0, 0, 13), (0, 1, 15), (0, 2, 17), (0, 3, 18), (0, 4, 19), (0, 5, 20)]
  cfg.deck._confirmed[2]=[(0, 0, 9), (0, 1, 16), (0, 2, 21), (0, 3, 22), (0, 4, 23), (0, 5, 24)]
  cfg.deck.itemids=[917, 938, 954, 920, 965, 972, 933, 943, 1007, 926, 995, 979, 929, 1002, 939, 944, 955, 966, 967, 973, 976, 980, 996, 1003]